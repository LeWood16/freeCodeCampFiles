
function makeFriendlyDates(arr) {
  
  // object with cardinal keys and ordinal values for months and days
  var dateVar = {
    months : {
      1 : "January", 2 : "February", 3 : "March", 4 : "April", 5 : "May",
      6 : "June", 7 : "July", 8 : "August", 9 : "September",
      10 : "October", 11 : "November", 12 : "December"
    },
    days : {
      1 : "1st", 2 : "2nd", 3 : "3rd", 4 : "4th", 5 : "5th", 6 : "6th",
      7 : "7th", 8 : "8th", 9 : "9th", 10 : "10th", 11 : "11th", 12 : "12th",
      13 : "13th", 14 : "14th", 15 : "15th", 16 : "16th", 17 : "17th",
      18 : "18th", 19 : "19th", 20 : "20th", 21 : "21st", 22 : "22nd",
      23 : "23rd", 24 : "24th", 25 : "25th", 26 : "26th", 27 : "27th",
      28 : "28th", 29 : "29th", 30 : "30th", 31 : "31st", 
    }
  };
  
  // cardinal versions of argument days and months
  var dayOne = arr[0].substr(8, 2);
  var dayTwo = arr[1].substr(8, 2);
  var monthOne = arr[0].substr(5, 2);
  var monthTwo = arr[1].substr(5, 2);

  // removes zero from zeroth month value if present
  if (arr[0].substr(5, 1) == 0){
    monthOne = arr[0].substr(6, 1);
  } else {
    monthOne = arr[0].substr(5, 2);
  }
  
  if (arr[1].substr(5, 1) == 0){
    monthTwo = arr[1].substr(6, 1);
  } else {
    monthTwo = arr[1].substr(5, 2);
  }
 
  // removes zero from zeroth day value if present
  if (arr[0].substr(8, 1) == 0){
    dayOne = arr[0].substr(9, 1);
  } else {
    dayOne = arr[0].substr(8, 2);
  }
  
  if (arr[1].substr(8, 1) == 0){
    dayTwo = arr[1].substr(9, 1);
  } else {
    dayTwo = arr[1].substr(8, 2);
  }
  
  
  // ordinal versions of argument days and months
  var mOne = dateVar.months[monthOne],
      dOne = dateVar.days[dayOne],
      yOne = arr[0].substr(0, 4),
      mTwo = dateVar.months[monthTwo],
      dTwo = dateVar.days[dayTwo],
      yTwo = arr[1].substr(0, 4);

  // range in days between the two dates
  var range =  Math.floor(( Date.parse(arr[1]) - Date.parse(arr[0]) ) / 86400000);

  var c = new Date();
  var currentYear = c.getFullYear();
  
  
  // if dates are exactly the same
   if (range === 0){
   return ([mOne + " " + dOne + ", " + yOne]);
  // if range between dates is greater than or equal to a year
   } else if (range >= 365){
  return [mOne + " " + dOne + ", " + yOne, mTwo + " " + dTwo + ", " + yTwo];
  // if range between dates is less than a year but more than 360 days apart
   } else if (range < 365 && range > 360){
  return [mOne + " " + dOne + ", " + yOne, mTwo +  " " + dTwo];
  // if dates occur in the exact same month
  } else if (range < 365 && mOne === mTwo){
  return [mOne + " " + dOne, dTwo];
  // if first year is the current year and range is less than a year
  } else if (yOne == currentYear && range < 365){
  return [mOne + " " + dOne, mTwo + " " + dTwo];
  // if range between dates is less than a year
  } else if (range < 365){
  return [mOne + " " + dOne + ", " + yOne, mTwo + " " + dTwo];
  // kick out of loop and return if none of above return true
  } else {
  return;
  }  
}

makeFriendlyDates(["2022-09-05", "2023-09-04"]);
